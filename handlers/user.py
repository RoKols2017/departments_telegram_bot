from aiogram import Router, types
from aiogram.filters import Command
from utils.decorators import with_db_session_async
from services.user_service import UserService
from keyboards import get_menu_by_role

router = Router()


@router.message(Command("menu"))
@router.message(types.Message.text == "üìÑ –ú–æ–∏ –¥–∞–Ω–Ω—ã–µ")  # –∫–Ω–æ–ø–∫–∞
@with_db_session_async
async def show_menu(message: types.Message, session):
    user_service = UserService(session)
    user = await user_service.get_user_by_telegram_id(message.from_user.id)
    if user:
        await message.answer("–ú–µ–Ω—é:", reply_markup=get_menu_by_role(user.role))
    else:
        await message.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")


@router.message(Command("mydata"))
@router.message(types.Message.text == "üìÑ –ú–æ–∏ –¥–∞–Ω–Ω—ã–µ")
@with_db_session_async
async def show_my_data(message: types.Message, session):
    user_service = UserService(session)
    user = await user_service.get_user_by_telegram_id(message.from_user.id)
    if not user:
        await message.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")
        return
    staff = user.staff
    await message.answer(
        f"üë§ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\n"
        f"–ò–º—è: {staff.first_name}\n"
        f"–û—Ç—á–µ—Å—Ç–≤–æ: {staff.patronymic}\n"
        f"–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä: {staff.personnel_number}\n"
        f"–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {staff.birthday.strftime('%d.%m.%Y')}\n"
        f"–†–æ–ª—å: {user.role}"
    )
