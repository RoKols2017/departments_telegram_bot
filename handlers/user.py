from aiogram import Router, F, types
from aiogram.filters import Command
from database import SessionLocal
from models import User
from utils import get_birthday_staff_ids
from keyboards import user_menu, get_menu_by_role

router = Router()

@router.message(Command("menu"))
@router.message(F.text == "üìÑ –ú–æ–∏ –¥–∞–Ω–Ω—ã–µ")  # –∫–Ω–æ–ø–∫–∞
async def show_menu(message: types.Message):
    session = SessionLocal()
    try:
        user = session.query(User).filter_by(telegram_id=message.from_user.id).first()
        if user:
            await message.answer("–ú–µ–Ω—é:", reply_markup=get_menu_by_role(user.role))
        else:
            await message.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")
    finally:
        session.close()

@router.message(Command("mydata"))
@router.message(F.text == "üìÑ –ú–æ–∏ –¥–∞–Ω–Ω—ã–µ")
async def show_my_data(message: types.Message):
    session = SessionLocal()
    try:
        user = session.query(User).filter_by(telegram_id=message.from_user.id).first()
        if not user:
            await message.answer("–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")
            return

        staff = user.staff
        await message.answer(
            f"üë§ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\n"
            f"–ò–º—è: {staff.first_name}\n"
            f"–û—Ç—á–µ—Å—Ç–≤–æ: {staff.patronymic}\n"
            f"–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä: {staff.personnel_number}\n"
            f"–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {staff.birthday.strftime('%d.%m.%Y')}\n"
            f"–†–æ–ª—å: {user.role}"
        )
    finally:
        session.close()
